points(adjusted_log$time, adjusted_log$D2, pch=16, col=2)
points(adjusted_log$time, adjusted_log$B3, pch=16, col=3)
points(adjusted_log$time, adjusted_log$D3, pch=16, col=3)
points(adjusted_log$time, adjusted_log$B4, pch=16, col=4)
points(adjusted_log$time, adjusted_log$D4, pch=16, col=4)
points(adjusted_log$time, adjusted_log$B5, pch=16, col=5)
points(adjusted_log$time, adjusted_log$D5, pch=16, col=5)
points(adjusted_log$time, adjusted_log$B6, pch=16, col=6)
points(adjusted_log$time, adjusted_log$D6, pch=16, col=6)
points(adjusted_log$time, adjusted_log$B7, pch=16, col=7)
points(adjusted_log$time, adjusted_log$D7, pch=16, col=7)
points(adjusted_log$time, adjusted_log$B8, pch=16, col=8)
points(adjusted_log$time, adjusted_log$D8, pch=16, col=8)
plot(adjusted_log$time, adjusted_log$B1, pch=16, main="117 strains, unlogged", ylim=c(-10,0))
points(adjusted_log$time, adjusted_log$D1, pch=16)
points(adjusted_log$time, adjusted_log$B2, pch=16, col=2)
points(adjusted_log$time, adjusted_log$D2, pch=16, col=2)
points(adjusted_log$time, adjusted_log$B3, pch=16, col=3)
points(adjusted_log$time, adjusted_log$D3, pch=16, col=3)
points(adjusted_log$time, adjusted_log$B4, pch=16, col=4)
points(adjusted_log$time, adjusted_log$D4, pch=16, col=4)
points(adjusted_log$time, adjusted_log$B5, pch=16, col=5)
points(adjusted_log$time, adjusted_log$D5, pch=16, col=5)
points(adjusted_log$time, adjusted_log$B6, pch=16, col=6)
points(adjusted_log$time, adjusted_log$D6, pch=16, col=6)
points(adjusted_log$time, adjusted_log$B7, pch=16, col=7)
points(adjusted_log$time, adjusted_log$D7, pch=16, col=7)
points(adjusted_log$time, adjusted_log$B8, pch=16, col=8)
points(adjusted_log$time, adjusted_log$D8, pch=16, col=8)
plot(adjusted_log$time, adjusted_log$B1, pch=16, main="117 strains, unlogged", ylim=c(-9,0))
points(adjusted_log$time, adjusted_log$D1, pch=16)
points(adjusted_log$time, adjusted_log$B2, pch=16, col=2)
points(adjusted_log$time, adjusted_log$D2, pch=16, col=2)
points(adjusted_log$time, adjusted_log$B3, pch=16, col=3)
points(adjusted_log$time, adjusted_log$D3, pch=16, col=3)
points(adjusted_log$time, adjusted_log$B4, pch=16, col=4)
points(adjusted_log$time, adjusted_log$D4, pch=16, col=4)
points(adjusted_log$time, adjusted_log$B5, pch=16, col=5)
points(adjusted_log$time, adjusted_log$D5, pch=16, col=5)
points(adjusted_log$time, adjusted_log$B6, pch=16, col=6)
points(adjusted_log$time, adjusted_log$D6, pch=16, col=6)
points(adjusted_log$time, adjusted_log$B7, pch=16, col=7)
points(adjusted_log$time, adjusted_log$D7, pch=16, col=7)
points(adjusted_log$time, adjusted_log$B8, pch=16, col=8)
points(adjusted_log$time, adjusted_log$D8, pch=16, col=8)
legend(1000, -5, "117,BFP-LN", pch=16, col=1, bty='n', cex=.75)
legend(1000, -5.5, "117,DHH1-LN", pch=16, col=2, bty='n', cex=.75)
legend(1000, -5.75, "117,DHH1-LN", pch=16, col=2, bty='n', cex=.75)
legend(1000, -5.25, "117,DHH1-LN", pch=16, col=2, bty='n', cex=.75)
plot(adjusted_log$time, adjusted_log$B1, pch=16, main="117 strains, unlogged", ylim=c(-9,0))
points(adjusted_log$time, adjusted_log$D1, pch=16)
points(adjusted_log$time, adjusted_log$B2, pch=16, col=2)
points(adjusted_log$time, adjusted_log$D2, pch=16, col=2)
points(adjusted_log$time, adjusted_log$B3, pch=16, col=3)
points(adjusted_log$time, adjusted_log$D3, pch=16, col=3)
points(adjusted_log$time, adjusted_log$B4, pch=16, col=4)
points(adjusted_log$time, adjusted_log$D4, pch=16, col=4)
points(adjusted_log$time, adjusted_log$B5, pch=16, col=5)
points(adjusted_log$time, adjusted_log$D5, pch=16, col=5)
points(adjusted_log$time, adjusted_log$B6, pch=16, col=6)
points(adjusted_log$time, adjusted_log$D6, pch=16, col=6)
points(adjusted_log$time, adjusted_log$B7, pch=16, col=7)
points(adjusted_log$time, adjusted_log$D7, pch=16, col=7)
points(adjusted_log$time, adjusted_log$B8, pch=16, col=8)
points(adjusted_log$time, adjusted_log$D8, pch=16, col=8)
legend(1000, -5, "117,BFP-LN", pch=16, col=1, bty='n', cex=.75)
legend(1000, -5.25, "117,DHH1-LN", pch=16, col=2, bty='n', cex=.75)
legend(1000, -5.5, "117,POP2-LN", pch=16, col=3, bty='n', cex=.75)
legend(1000, -5.75, "117,PAB1-LN", pch=16, col=4, bty='n', cex=.75)
legend(1000, -6, "117,CDC19-LN", pch=16, col=5, bty='n', cex=.75)
legend(1000, -6.25, "117,YPR204W-LN", pch=16, col=6, bty='n', cex=.75)
legend(1000, -6.5, "117,PAT1-LN", pch=16, col=7, bty='n', cex=.75)
legend(1000, -6.75, "117,YMR295C-LN", pch=16, col=8, bty='n', cex=.75)
plot(adjusted_log$time, adjusted_log$A1, pch=16, main="116 strains, unlogged", ylim=c(-9,0))
points(adjusted_log$time, adjusted_log$C1, pch=16)
points(adjusted_log$time, adjusted_log$A2, pch=16, col=2)
points(adjusted_log$time, adjusted_log$C2, pch=16, col=2)
points(adjusted_log$time, adjusted_log$A3, pch=16, col=3)
points(adjusted_log$time, adjusted_log$C3, pch=16, col=3)
points(adjusted_log$time, adjusted_log$A4, pch=16, col=4)
points(adjusted_log$time, adjusted_log$C4, pch=16, col=4)
points(adjusted_log$time, adjusted_log$A5, pch=16, col=5)
points(adjusted_log$time, adjusted_log$C5, pch=16, col=5)
points(adjusted_log$time, adjusted_log$A6, pch=16, col=6)
points(adjusted_log$time, adjusted_log$C6, pch=16, col=6)
points(adjusted_log$time, adjusted_log$A7, pch=16, col=7)
points(adjusted_log$time, adjusted_log$C7, pch=16, col=7)
points(adjusted_log$time, adjusted_log$A8, pch=16, col=8)
points(adjusted_log$time, adjusted_log$C8, pch=16, col=8)
#logged for 116
pdf("logged 116 growth curves, 20150331.pdf", useDingbats = FALSE)
plot(adjusted_log$time, adjusted_log$A1, pch=16, main="116 strains, unlogged", ylim=c(-9,0))
points(adjusted_log$time, adjusted_log$C1, pch=16)
points(adjusted_log$time, adjusted_log$A2, pch=16, col=2)
points(adjusted_log$time, adjusted_log$C2, pch=16, col=2)
points(adjusted_log$time, adjusted_log$A3, pch=16, col=3)
points(adjusted_log$time, adjusted_log$C3, pch=16, col=3)
points(adjusted_log$time, adjusted_log$A4, pch=16, col=4)
points(adjusted_log$time, adjusted_log$C4, pch=16, col=4)
points(adjusted_log$time, adjusted_log$A5, pch=16, col=5)
points(adjusted_log$time, adjusted_log$C5, pch=16, col=5)
points(adjusted_log$time, adjusted_log$A6, pch=16, col=6)
points(adjusted_log$time, adjusted_log$C6, pch=16, col=6)
points(adjusted_log$time, adjusted_log$A7, pch=16, col=7)
points(adjusted_log$time, adjusted_log$C7, pch=16, col=7)
points(adjusted_log$time, adjusted_log$A8, pch=16, col=8)
points(adjusted_log$time, adjusted_log$C8, pch=16, col=8)
legend(1000, -5, "116,BFP-LN", pch=16, col=1, bty='n', cex=.75)
legend(1000, -5.25, "116,DHH1-LN", pch=16, col=2, bty='n', cex=.75)
legend(1000, -5.5, "116,POP2-LN", pch=16, col=3, bty='n', cex=.75)
legend(1000, -5.75, "116,PAB1-LN", pch=16, col=4, bty='n', cex=.75)
legend(1000, -6, "116,CDC19-LN", pch=16, col=5, bty='n', cex=.75)
legend(1000, -6.25, "116,YPR204W-LN", pch=16, col=6, bty='n', cex=.75)
legend(1000, -6.5, "116,PAT1-LN", pch=16, col=7, bty='n', cex=.75)
legend(1000, -6.75, "116,YMR295C-LN", pch=16, col=8, bty='n', cex=.75)
dev.off()
#unlogged for 117
pdf("logged 117 growth curves, 20150331.pdf", useDingbats = FALSE)
plot(adjusted_log$time, adjusted_log$B1, pch=16, main="117 strains, unlogged", ylim=c(-9,0))
points(adjusted_log$time, adjusted_log$D1, pch=16)
points(adjusted_log$time, adjusted_log$B2, pch=16, col=2)
points(adjusted_log$time, adjusted_log$D2, pch=16, col=2)
points(adjusted_log$time, adjusted_log$B3, pch=16, col=3)
points(adjusted_log$time, adjusted_log$D3, pch=16, col=3)
points(adjusted_log$time, adjusted_log$B4, pch=16, col=4)
points(adjusted_log$time, adjusted_log$D4, pch=16, col=4)
points(adjusted_log$time, adjusted_log$B5, pch=16, col=5)
points(adjusted_log$time, adjusted_log$D5, pch=16, col=5)
points(adjusted_log$time, adjusted_log$B6, pch=16, col=6)
points(adjusted_log$time, adjusted_log$D6, pch=16, col=6)
points(adjusted_log$time, adjusted_log$B7, pch=16, col=7)
points(adjusted_log$time, adjusted_log$D7, pch=16, col=7)
points(adjusted_log$time, adjusted_log$B8, pch=16, col=8)
points(adjusted_log$time, adjusted_log$D8, pch=16, col=8)
legend(1000, -5, "117,BFP-LN", pch=16, col=1, bty='n', cex=.75)
legend(1000, -5.25, "117,DHH1-LN", pch=16, col=2, bty='n', cex=.75)
legend(1000, -5.5, "117,POP2-LN", pch=16, col=3, bty='n', cex=.75)
legend(1000, -5.75, "117,PAB1-LN", pch=16, col=4, bty='n', cex=.75)
legend(1000, -6, "117,CDC19-LN", pch=16, col=5, bty='n', cex=.75)
legend(1000, -6.25, "117,YPR204W-LN", pch=16, col=6, bty='n', cex=.75)
legend(1000, -6.5, "117,PAT1-LN", pch=16, col=7, bty='n', cex=.75)
legend(1000, -6.75, "117,YMR295C-LN", pch=16, col=8, bty='n', cex=.75)
dev.off()
temp = adjusted_log[adjusted_log & adjusted_log<(-3)),c("B1","time")]
temp = adjusted_log[adjusted_log>(-5) & adjusted_log<(-3)),c("B1","time")]
temp = adjusted_log[adjusted_log>(-5) & adjusted_log<(-3),c("B1","time")]
(temp)
rm(temp)
temp = adjusted_log[adjusted_log>(-5) & adjusted_log<(-3),c("B1","time")]
(temp)
temp = adjusted_log[(adjusted_log>(-5) & adjusted_log<(-3)),c("B1","time")]
(temp)
lm(temp$B1~temp$time)
blah = lm(temp$B1~temp$time)
blah
blah[[1]]
blah[[1]][1]
blah[[1]][1][1]
blah[1]
blah$coefficients[1]
blah$coefficients[2]
90*blah$coefficients[2]
1/blah$coefficients[2]
gen_time = 1/blah$coefficients[2] #the generation time from slope
gen_time
gen_time_fxn = function(well){
#pull the region where things are growing exponentially
temp = adjusted_log[(adjusted_log>(-5) & adjusted_log<(-3)),c(well,"time")]
temp
#change do regression to get slope
blah = lm(temp$well~temp$time)
blah
blah$coefficients[2] #the slope
gen_time = 1/blah$coefficients[2] #the generation time from slope
gen_time
}
gen_time_fxn(B1)
gen_time_fxn("B1")
gen_time_fxn = function(well){
#pull the region where things are growing exponentially
temp = adjusted_log[(adjusted_log>(-5) & adjusted_log<(-3)),c(well,"time")]
temp
#change do regression to get slope
blah = lm(temp[,well]~temp$time)
blah
blah$coefficients[2] #the slope
gen_time = 1/blah$coefficients[2] #the generation time from slope
gen_time
}
gen_time_fxn("B1")
colnames(adjusted_log)
?apply
apply(colnames(adjusted_log), 2, gen_time_fxn)
apply(colnames(adjusted_log), 1, gen_time_fxn)
lapply(colnames(adjusted_log), gen_time_fxn)
?lapply
sapply(colnames(adjusted_log), gen_time_fxn)
colnames(adjusted_log)
sapply(colnames(adjusted_log)[1:28], gen_time_fxn)
sapply(colnames(adjusted_log)[1], gen_time_fxn)
sapply(colnames(adjusted_log)[9], gen_time_fxn)
colnames(adjusted_log)
?grep
grep("9", colnames(adjusted_log), invert=TRUE)
colnames(adjusted_log)[grep("9", colnames(adjusted_log), invert=TRUE)]
sapply(colnames(adjusted_log)[grep("9", colnames(adjusted_log), invert=TRUE)], gen_time_fxn)
as.table(colnames(adjusted_log)[grep("9", colnames(adjusted_log), invert=TRUE)])
as.matrix(colnames(adjusted_log)[grep("9", colnames(adjusted_log), invert=TRUE)])
as.matrix(sapply(colnames(adjusted_log)[grep("9", colnames(adjusted_log), invert=TRUE)], gen_time_fxn))
growth_results = as.matrix(sapply(colnames(adjusted_log)[grep("9", colnames(adjusted_log), invert=TRUE)], gen_time_fxn))
key = c("116,BFP-LN", "116,DHH1-LN", "116,POP2-LN", "116,PAB1-LN",
growth_results$key = key
key
key = c("116,BFP-LN", "116,DHH1-LN", "116,POP2-LN", "116,PAB1-LN",
"116,CDC19-LN", "116,YPR204W-LN", "116,PAT1-LN" ,"116,YMR295C-LN",
"116,BFP-LN", "116,DHH1-LN", "116,POP2-LN", "116,PAB1-LN",
"117-BFP-LN",
"116,CDC19-LN", "116,YPR204W-LN", "116,PAT1-LN" ,"116,YMR295C-LN",
"117-BFP-LN",
"117,BFP-LN", "117,DHH1-LN", "117,POP2-LN", "117,PAB1-LN",
"117,CDC19-LN", "117,YPR204W-LN", "117,PAT1-LN" ,"117,YMR295C-LN",
"117,BFP-LN", "117,DHH1-LN", "117,POP2-LN", "117,PAB1-LN",
"117,CDC19-LN", "117,YPR204W-LN", "117,PAT1-LN" ,"117,YMR295C-LN"
"time")
key = c("116,BFP-LN", "116,DHH1-LN", "116,POP2-LN", "116,PAB1-LN",
"116,CDC19-LN", "116,YPR204W-LN", "116,PAT1-LN" ,"116,YMR295C-LN",
"116,BFP-LN", "116,DHH1-LN", "116,POP2-LN", "116,PAB1-LN",
"117-BFP-LN",
"116,CDC19-LN", "116,YPR204W-LN", "116,PAT1-LN" ,"116,YMR295C-LN",
"117-BFP-LN",
"117,BFP-LN", "117,DHH1-LN", "117,POP2-LN", "117,PAB1-LN",
"117,CDC19-LN", "117,YPR204W-LN", "117,PAT1-LN" ,"117,YMR295C-LN",
"117,BFP-LN", "117,DHH1-LN", "117,POP2-LN", "117,PAB1-LN",
"117,CDC19-LN", "117,YPR204W-LN", "117,PAT1-LN" ,"117,YMR295C-LN",
"time")
key
growth_results$key = key
growth_results
growth_results = as.matrix(sapply(colnames(adjusted_log)[grep("9", colnames(adjusted_log), invert=TRUE)], gen_time_fxn))
growth_results
growth_results[,2] = key
growth_results = as.matrix(apply(colnames(adjusted_log)[grep("9", colnames(adjusted_log), invert=TRUE)], gen_time_fxn))
growth_results = as.matrix(lapply(colnames(adjusted_log)[grep("9", colnames(adjusted_log), invert=TRUE)], gen_time_fxn))
growth_results
growth_results = as.matrix(sapply(colnames(adjusted_log)[grep("9", colnames(adjusted_log), invert=TRUE)], gen_time_fxn))
growth_results
typeof(growth_results)
cbind(growth_results, key)
as.data.frame(c(growth_results, key), ncol=2)
?as.data.frame
as.data.frame(growth_results, row.names=key
as.data.frame(growth_results, row.names=key)
as.matrix(c(growth_results, key), ncol=2)
cbind(growth_results, key)
as.data.frame(cbind(growth_results, key))
growth_results = as.data.frame(cbind(growth_results, key))
growth_results
colnames(growth_results)[1]
colnames(growth_results)[1] = "doubling_time"
colnames(adjusted_log)
key = c("116,BFP-LN", "116,DHH1-LN", "116,POP2-LN", "116,PAB1-LN",
"116,CDC19-LN", "116,YPR204W-LN", "116,PAT1-LN" ,"116,YMR295C-LN",
"116,BFP-LN", "116,DHH1-LN", "116,POP2-LN", "116,PAB1-LN",
"117-BFP-LN*",
"116,CDC19-LN", "116,YPR204W-LN", "116,PAT1-LN" ,"116,YMR295C-LN",
"117-BFP-LN*",
"117,BFP-LN", "117,DHH1-LN", "117,POP2-LN", "117,PAB1-LN",
"117,CDC19-LN", "117,YPR204W-LN", "117,PAT1-LN" ,"117,YMR295C-LN",
"117,BFP-LN", "117,DHH1-LN", "117,POP2-LN", "117,PAB1-LN",
"117,CDC19-LN", "117,YPR204W-LN", "117,PAT1-LN" ,"117,YMR295C-LN",
"time")
growth_results[,2] = key
typeof(growth_results)
growth_results = as.data.frame(cbind(growth_results, key))
growth_results
growth_results = as.matrix(sapply(colnames(adjusted_log)[grep("9", colnames(adjusted_log), invert=TRUE)], gen_time_fxn))
key = c("116,BFP-LN", "116,DHH1-LN", "116,POP2-LN", "116,PAB1-LN",
"116,CDC19-LN", "116,YPR204W-LN", "116,PAT1-LN" ,"116,YMR295C-LN",
"116,BFP-LN", "116,DHH1-LN", "116,POP2-LN", "116,PAB1-LN",
"117-BFP-LN*",
"116,CDC19-LN", "116,YPR204W-LN", "116,PAT1-LN" ,"116,YMR295C-LN",
"117-BFP-LN*",
"117,BFP-LN", "117,DHH1-LN", "117,POP2-LN", "117,PAB1-LN",
"117,CDC19-LN", "117,YPR204W-LN", "117,PAT1-LN" ,"117,YMR295C-LN",
"117,BFP-LN", "117,DHH1-LN", "117,POP2-LN", "117,PAB1-LN",
"117,CDC19-LN", "117,YPR204W-LN", "117,PAT1-LN" ,"117,YMR295C-LN",
"time")
key
growth_results[,2] = key
typeof(growth_results)
growth_results = as.data.frame(cbind(growth_results, key))
growth_results
colnames(growth_results)[1] = "doubling_time"
growth_results
order(growth_results$key)
growth_results[order(growth_results$key),]
growth_results = as.matrix(sapply(colnames(adjusted_log)[grep("9", colnames(adjusted_log), invert=TRUE)], gen_time_fxn))
key = c("116,BFP-LN", "116,DHH1-LN", "116,POP2-LN", "116,PAB1-LN",
"116,CDC19-LN", "116,YPR204W-LN", "116,PAT1-LN" ,"116,YMR295C-LN",
"116,BFP-LN", "116,DHH1-LN", "116,POP2-LN", "116,PAB1-LN",
"117-BFP-LN*",
"116,CDC19-LN", "116,YPR204W-LN", "116,PAT1-LN" ,"116,YMR295C-LN",
"117-BFP-LN*",
"117,BFP-LN", "117,DHH1-LN", "117,POP2-LN", "117,PAB1-LN",
"117,CDC19-LN", "117,YPR204W-LN", "117,PAT1-LN" ,"117,YMR295C-LN",
"117,BFP-LN", "117,DHH1-LN", "117,POP2-LN", "117,PAB1-LN",
"117,CDC19-LN", "117,YPR204W-LN", "117,PAT1-LN" ,"117,YMR295C-LN",
"time")
key
growth_results[,2] = key
growth_results = as.matrix(sapply(colnames(adjusted_log)[grep("9", colnames(adjusted_log), invert=TRUE)], gen_time_fxn))
key = c("116,BFP-LN", "116,DHH1-LN", "116,POP2-LN", "116,PAB1-LN",
"116,CDC19-LN", "116,YPR204W-LN", "116,PAT1-LN" ,"116,YMR295C-LN",
"116,BFP-LN", "116,DHH1-LN", "116,POP2-LN", "116,PAB1-LN",
"117-BFP-LN*",
"116,CDC19-LN", "116,YPR204W-LN", "116,PAT1-LN" ,"116,YMR295C-LN",
"117-BFP-LN*",
"117,BFP-LN", "117,DHH1-LN", "117,POP2-LN", "117,PAB1-LN",
"117,CDC19-LN", "117,YPR204W-LN", "117,PAT1-LN" ,"117,YMR295C-LN",
"117,BFP-LN", "117,DHH1-LN", "117,POP2-LN", "117,PAB1-LN",
"117,CDC19-LN", "117,YPR204W-LN", "117,PAT1-LN" ,"117,YMR295C-LN",
"time")
key
growth_results[,2] = key
growth_results = as.data.frame(cbind(growth_results, key))
growth_results
growth_results = as.matrix(sapply(colnames(adjusted_log)[grep("9", colnames(adjusted_log), invert=TRUE)], gen_time_fxn))
key = c("116,BFP-LN", "116,DHH1-LN", "116,POP2-LN", "116,PAB1-LN",
"116,CDC19-LN", "116,YPR204W-LN", "116,PAT1-LN" ,"116,YMR295C-LN",
"117-BFP-LN*",
"116,BFP-LN", "116,DHH1-LN", "116,POP2-LN", "116,PAB1-LN",
"116,CDC19-LN", "116,YPR204W-LN", "116,PAT1-LN" ,"116,YMR295C-LN",
"117-BFP-LN*",
"117,BFP-LN", "117,DHH1-LN", "117,POP2-LN", "117,PAB1-LN",
"117,CDC19-LN", "117,YPR204W-LN", "117,PAT1-LN" ,"117,YMR295C-LN",
"117,BFP-LN", "117,DHH1-LN", "117,POP2-LN", "117,PAB1-LN",
"117,CDC19-LN", "117,YPR204W-LN", "117,PAT1-LN" ,"117,YMR295C-LN",
"time")
key
growth_results = as.data.frame(cbind(growth_results, key))
growth_results
colnames(growth_results)[1] = "doubling_time"
growth_results[order(growth_results$key),]
temp
growth_results[order(growth_results$key),]
gen_time = 1/blah$coefficients[2] #the generation time from slope
blah
plot(temp$time, temp$B1)
abline(a=blah$coefficients[1], b=blah$coefficients[2])
plot(adjusted_log$time, adjusted_log$B1)
abline(a=blah$coefficients[1], b=blah$coefficients[2])
plot(temp$time, temp$B1)
abline(a=blah$coefficients[1], b=blah$coefficients[2])
gen_time_fxn = function(well){
#pull the region where things are growing exponentially
temp = adjusted_log[(adjusted_log>(-5) & adjusted_log<(-3)),c(well,"time")]
temp
#change do regression to get slope
blah = lm(temp[,well]~temp$time)
blah
blah$coefficients[2] #the slope
plot(temp)
gen_time = 1/blah$coefficients[2] #the generation time from slope
gen_time
pdf()
plot(adjusted_log$time, adjusted_log[,well], main=sprintf("%s", well))
abline(a=blah$coefficients[1], b=blah$coefficients[2])
plot(temp$time, temp[,well], main=sprintf("%s", well))
abline(a=blah$coefficients[1], b=blah$coefficients[2])
}
gen_time_fxn("B1")
gen_time_fxn = function(well){
#pull the region where things are growing exponentially
temp = adjusted_log[(adjusted_log>(-5) & adjusted_log<(-3)),c(well,"time")]
temp
#change do regression to get slope
blah = lm(temp[,well]~temp$time)
blah
blah$coefficients[2] #the slope
plot(temp)
pdf(sprintf("%s regression.pdf", well), useDingbats = FALSE)
plot(adjusted_log$time, adjusted_log[,well], main=sprintf("%s", well))
abline(a=blah$coefficients[1], b=blah$coefficients[2])
plot(temp$time, temp[,well], main=sprintf("%s", well))
abline(a=blah$coefficients[1], b=blah$coefficients[2])
dev.off()
gen_time = 1/blah$coefficients[2] #the generation time from slope
gen_time
}
gen_time_fxn("B1")
growth_results = as.matrix(sapply(colnames(adjusted_log)[grep("9", colnames(adjusted_log), invert=TRUE)], gen_time_fxn))
?legend()
gen_time_fxn = function(well){
#pull the region where things are growing exponentially
temp = adjusted_log[(adjusted_log>(-5) & adjusted_log<(-3)),c(well,"time")]
temp
#change do regression to get slope
blah = lm(temp[,well]~temp$time)
blah
blah$coefficients[2] #the slope
plot(temp)
pdf(sprintf("%s regression.pdf", well), useDingbats = FALSE)
plot(adjusted_log$time, adjusted_log[,well], main=sprintf("%s", well))
legend(x=250, y=-4.5, round(1/blah$coefficients[2], digits = 1)
abline(a=blah$coefficients[1], b=blah$coefficients[2])
plot(temp$time, temp[,well], main=sprintf("%s", well))
abline(a=blah$coefficients[1], b=blah$coefficients[2])
dev.off()
gen_time = 1/blah$coefficients[2] #the generation time from slope
gen_time
}
gen_time_fxn = function(well){
#pull the region where things are growing exponentially
temp = adjusted_log[(adjusted_log>(-5) & adjusted_log<(-3)),c(well,"time")]
temp
#change do regression to get slope
blah = lm(temp[,well]~temp$time)
blah
blah$coefficients[2] #the slope
plot(temp)
pdf(sprintf("%s regression.pdf", well), useDingbats = FALSE)
plot(adjusted_log$time, adjusted_log[,well], main=sprintf("%s", well))
legend(x=250, y=-4.5, round(1/blah$coefficients[2], digits = 1))
abline(a=blah$coefficients[1], b=blah$coefficients[2])
plot(temp$time, temp[,well], main=sprintf("%s", well))
abline(a=blah$coefficients[1], b=blah$coefficients[2])
dev.off()
gen_time = 1/blah$coefficients[2] #the generation time from slope
gen_time
}
gen_time_fxn("B1")
gen_time_fxn = function(well){
#pull the region where things are growing exponentially
temp = adjusted_log[(adjusted_log>(-5) & adjusted_log<(-3)),c(well,"time")]
temp
#change do regression to get slope
blah = lm(temp[,well]~temp$time)
blah
blah$coefficients[2] #the slope
plot(temp)
pdf(sprintf("%s regression.pdf", well), useDingbats = FALSE)
plot(adjusted_log$time, adjusted_log[,well], main=sprintf("%s", well))
legend(x=250, y=-4.5, round(1/blah$coefficients[2], digits = 1), bty='n')
abline(a=blah$coefficients[1], b=blah$coefficients[2])
plot(temp$time, temp[,well], main=sprintf("%s", well))
abline(a=blah$coefficients[1], b=blah$coefficients[2])
legend(x=250, y=-4.5, round(1/blah$coefficients[2], digits = 1), bty='n')
dev.off()
gen_time = 1/blah$coefficients[2] #the generation time from slope
gen_time
}
gen_time_fxn("B1")
growth_results = as.matrix(sapply(colnames(adjusted_log)[grep("9", colnames(adjusted_log), invert=TRUE)], gen_time_fxn))
key = c("116,BFP-LN", "116,DHH1-LN", "116,POP2-LN", "116,PAB1-LN",
"116,CDC19-LN", "116,YPR204W-LN", "116,PAT1-LN" ,"116,YMR295C-LN",
"117-BFP-LN*",
"116,BFP-LN", "116,DHH1-LN", "116,POP2-LN", "116,PAB1-LN",
"116,CDC19-LN", "116,YPR204W-LN", "116,PAT1-LN" ,"116,YMR295C-LN",
"117-BFP-LN*",
"117,BFP-LN", "117,DHH1-LN", "117,POP2-LN", "117,PAB1-LN",
"117,CDC19-LN", "117,YPR204W-LN", "117,PAT1-LN" ,"117,YMR295C-LN",
"117,BFP-LN", "117,DHH1-LN", "117,POP2-LN", "117,PAB1-LN",
"117,CDC19-LN", "117,YPR204W-LN", "117,PAT1-LN" ,"117,YMR295C-LN",
"time")
key
growth_results = as.data.frame(cbind(growth_results, key))
growth_results
colnames(growth_results)[1] = "doubling_time"
fits = ("ok", "not great", "ok", "ok", "messy", "ok", "ok", "terrible", "messy",
"ok", "ok", "messy", "ok", "messy", "ok", "messy", "ok", "really messy",
"ok", "ok", "ok", "ok", "a little messy", "a little messy", "ok", "ok",
"pretty messy", "really messy", "pretty messy", "messy", "messy", "really messy", "really messy", "ok")
fits = c("ok", "not great", "ok", "ok", "messy", "ok", "ok", "terrible", "messy",
"ok", "ok", "messy", "ok", "messy", "ok", "messy", "ok", "really messy",
"ok", "ok", "ok", "ok", "a little messy", "a little messy", "ok", "ok",
"pretty messy", "really messy", "pretty messy", "messy", "messy", "really messy", "really messy", "ok")
growth_results = as.data.frame(cbind(growth_results, key, fits))
growth_results
growth_results = as.data.frame(cbind(growth_results, key, fits))
length(fits)
fits = c("ok", "not great", "ok", "ok", "messy", "ok", "ok", "terrible", "messy",
"ok", "ok", "messy", "ok", "messy", "ok", "messy", "ok", "really messy",
"ok", "ok", "ok", "ok", "a little messy", "a little messy", "ok", "ok",
"pretty messy", "really messy", "pretty messy", "messy", "messy", "really messy", "really messy", "ok", "whatever")
growth_results = as.data.frame(cbind(growth_results, key, fits))
growth_results
growth_results = as.matrix(sapply(colnames(adjusted_log)[grep("9", colnames(adjusted_log), invert=TRUE)], gen_time_fxn))
key = c("116,BFP-LN", "116,DHH1-LN", "116,POP2-LN", "116,PAB1-LN",
"116,CDC19-LN", "116,YPR204W-LN", "116,PAT1-LN" ,"116,YMR295C-LN",
"117-BFP-LN*",
"116,BFP-LN", "116,DHH1-LN", "116,POP2-LN", "116,PAB1-LN",
"116,CDC19-LN", "116,YPR204W-LN", "116,PAT1-LN" ,"116,YMR295C-LN",
"117-BFP-LN*",
"117,BFP-LN", "117,DHH1-LN", "117,POP2-LN", "117,PAB1-LN",
"117,CDC19-LN", "117,YPR204W-LN", "117,PAT1-LN" ,"117,YMR295C-LN",
"117,BFP-LN", "117,DHH1-LN", "117,POP2-LN", "117,PAB1-LN",
"117,CDC19-LN", "117,YPR204W-LN", "117,PAT1-LN" ,"117,YMR295C-LN",
"time")
fits = c("ok", "not great", "ok", "ok", "messy", "ok", "ok", "terrible", "messy",
"ok", "ok", "messy", "ok", "messy", "ok", "messy", "ok", "really messy",
"ok", "ok", "ok", "ok", "a little messy", "a little messy", "ok", "ok",
"pretty messy", "really messy", "pretty messy", "messy", "messy", "really messy", "really messy", "ok", "whatever")
growth_results = as.data.frame(cbind(growth_results, key, fits))
growth_results
colnames(growth_results)[1] = "doubling_time"
growth_results
growth_results[order(growth_results$key),]
?write.csv
write.csv(growth_results, "20150331 growth results.csv")
growth_results[order(growth_results$key),]
growth_results = growth_results[order(growth_results$key),]
write.csv(growth_results, "20150331 growth results.csv")
